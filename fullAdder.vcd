$date
	Thu Sep 22 23:07:54 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module behavioralFullAdder $end
$var wire 1 ! a $end
$var wire 1 " b $end
$var wire 1 # carryin $end
$var wire 1 $ carryout $end
$var wire 1 % sum $end
$upscope $end
$scope module testFullAdder $end
$var wire 1 & carryout $end
$var wire 1 ' sum $end
$var reg 1 ( a $end
$var reg 1 ) b $end
$var reg 1 * carryin $end
$scope module adder $end
$var wire 1 + a $end
$var wire 1 , abCinXor $end
$var wire 1 - abSum $end
$var wire 1 . abXor $end
$var wire 1 / b $end
$var wire 1 0 carryin $end
$var wire 1 & carryout $end
$var wire 1 ' sum $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
x%
x$
z#
z"
z!
$end
#1000
1'
1*
10
#2000
1.
0*
00
1)
1/
#3000
1&
1,
0'
1*
10
#4000
0&
0,
1'
0*
00
0)
0/
1(
1+
#5000
1&
1,
0'
1*
10
#6000
0,
1-
0.
0*
00
1)
1/
#7000
1'
1*
10
#8000
