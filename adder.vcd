$date
	Wed Sep 28 20:36:53 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testFourBit $end
$var wire 1 ! carryout $end
$var wire 1 " overflow $end
$var wire 4 # sum [3:0] $end
$var reg 4 $ a [3:0] $end
$var reg 4 % b [3:0] $end
$scope module fouradder $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 ! carryout $end
$var wire 1 ( carryout0 $end
$var wire 1 ) carryout1 $end
$var wire 1 * carryout2 $end
$var wire 1 " overflow $end
$var wire 4 + sum [3:0] $end
$scope module add1 $end
$var wire 1 , AandB $end
$var wire 1 - AxorB $end
$var wire 1 . AxorBandcarryin $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 1 carryin $end
$var wire 1 ( carryout $end
$var wire 1 2 sum $end
$upscope $end
$scope module add2 $end
$var wire 1 3 AandB $end
$var wire 1 4 AxorB $end
$var wire 1 5 AxorBandcarryin $end
$var wire 1 6 a $end
$var wire 1 7 b $end
$var wire 1 ( carryin $end
$var wire 1 ) carryout $end
$var wire 1 8 sum $end
$upscope $end
$scope module add3 $end
$var wire 1 9 AandB $end
$var wire 1 : AxorB $end
$var wire 1 ; AxorBandcarryin $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 ) carryin $end
$var wire 1 * carryout $end
$var wire 1 > sum $end
$upscope $end
$scope module add4 $end
$var wire 1 ? AandB $end
$var wire 1 @ AxorB $end
$var wire 1 A AxorBandcarryin $end
$var wire 1 B a $end
$var wire 1 C b $end
$var wire 1 * carryin $end
$var wire 1 ! carryout $end
$var wire 1 D sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xD
0C
0B
xA
z@
z?
x>
1=
0<
x;
z:
z9
x8
17
16
x5
z4
z3
x2
01
10
1/
z.
z-
z,
bx +
x*
x)
x(
b111 '
b11 &
b111 %
b11 $
bx #
x"
x!
$end
#50000
0?
0@
09
1:
13
04
1,
0.
0-
#100000
0A
1)
05
1(
02
bx0 #
bx0 +
#150000
0!
0>
1;
18
bx010 #
bx010 +
#200000
1*
#250000
1D
b1010 #
b1010 +
1"
#1000000
00
07
0=
0/
06
b0 %
b0 '
b0 $
b0 &
#1050000
0:
0,
03
#1100000
1>
b1110 #
b1110 +
0;
0(
0)
#1150000
0*
08
0>
b1000 #
b1000 +
#1200000
0D
b0 #
b0 +
0"
#2000000
1/
b1 $
b1 &
#2050000
1-
#2100000
12
b1 #
b1 +
#3000000
10
b1 %
b1 '
#3050000
0-
1,
#3100000
02
b0 #
b0 +
1(
#3150000
18
b10 #
b10 +
#4000000
1C
1B
b1001 %
b1001 '
b1001 $
b1001 &
#4050000
1?
#4100000
1!
#4150000
1"
#5000000
1=
0C
1<
b101 %
b101 '
b1101 $
b1101 &
#5050000
1@
0?
19
#5100000
1D
b1010 #
b1010 +
0!
1*
#5150000
0D
b10 #
b10 +
1A
#5200000
1!
#5250000
0"
#6000000
00
1C
16
b1100 %
b1100 '
b1111 $
b1111 &
#6050000
1-
0,
0@
1?
14
#6100000
12
0(
1D
0A
08
b1001 #
b1001 +
15
#6150000
18
b1011 #
b1011 +
05
1)
#6200000
0)
1>
b1111 #
b1111 +
#6250000
0>
b1011 #
b1011 +
#7000000
17
0=
06
0<
b1010 %
b1010 '
b1001 $
b1001 &
#7050000
09
#7100000
0*
#7150000
0D
b11 #
b11 +
1"
#8000000
10
07
0/
16
b1001 %
b1001 '
b1010 $
b1010 &
#9000000
00
06
1<
b1000 %
b1000 '
b1100 $
b1100 &
#9050000
0-
04
1:
#9100000
02
08
1>
b100 #
b100 +
#10000000
1/
b1101 $
b1101 &
#10050000
1-
#10100000
12
b101 #
b101 +
#11000000
10
17
1=
0C
16
0B
b111 %
b111 '
b111 $
b111 &
#11050000
0-
1,
0:
19
13
0?
#11100000
02
1(
0>
b0 #
b0 +
1*
1)
0!
#11150000
18
1D
1>
b1110 #
b1110 +
#12000000
07
0/
06
b101 %
b101 '
b100 $
b100 &
#12050000
1-
0,
03
#12100000
12
b1111 #
b1111 +
0(
0)
#12150000
08
0>
b1001 #
b1001 +
#13000000
00
17
16
b110 %
b110 '
b110 $
b110 &
#13050000
0-
13
#13100000
02
b1000 #
b1000 +
1)
#13150000
1>
b1100 #
b1100 +
#14000000
07
0=
1C
06
0<
1B
b1000 %
b1000 '
b1000 $
b1000 &
#14050000
03
09
1?
#14100000
0)
0*
1!
#14150000
0>
0D
b0 #
b0 +
#15000000
10
1/
b1001 %
b1001 '
b1001 $
b1001 &
#15050000
1,
#15100000
1(
#15150000
18
b10 #
b10 +
#16000000
